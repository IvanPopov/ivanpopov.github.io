{"version":3,"file":"src_sandbox_containers_editor_hlsl_ts.8e6121b126b3d21e7140.bundle.js","mappings":"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","sources":["webpack://influx/./src/sandbox/containers/editor/hlsl.ts"],"sourcesContent":["'use strict';\r\nimport * as monaco from 'monaco-editor';\r\n\r\nimport IRichLanguageConfiguration = monaco.languages.LanguageConfiguration;\r\nimport ILanguage = monaco.languages.IMonarchLanguage;\r\n\r\nexport const conf: IRichLanguageConfiguration = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\n\r\n// tslint:disable-next-line:no-object-literal-type-assertion\r\nexport const language = <ILanguage>{\r\n    defaultToken: '',\r\n    tokenPostfix: '.hlsl',\r\n\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' }\r\n    ],\r\n\r\n    keywords: [\r\n        'AppendStructuredBuffer',\r\n        'auto',\r\n        'bool',\r\n        'bool2',\r\n        'bool3',\r\n        'bool4',\r\n        'break',\r\n        'case',\r\n        'const',\r\n        'continue',\r\n        'compile',\r\n        'column_major',\r\n        'decltype',\r\n        'default',\r\n        'do',\r\n        'discard',\r\n        'decl',\r\n        'else',\r\n        'enum',\r\n        'extern',\r\n        'false',\r\n        'float',\r\n        'float2',\r\n        'float3',\r\n        'float4',\r\n        'float2x2',\r\n        'float2x3',\r\n        'float2x4',\r\n        'float3x2',\r\n        'float3x3',\r\n        'float3x4',\r\n        'float4x2',\r\n        'float4x3',\r\n        'float4x4',\r\n        'for',\r\n        'half',\r\n        'if',\r\n        'in',\r\n        'inout',\r\n        'inline',\r\n        'int',\r\n        'int2',\r\n        'int3',\r\n        'int4',\r\n        'int64',\r\n        'matrix',\r\n        'new',\r\n        'out',\r\n        'pass',\r\n        'provide',\r\n        'row_major',\r\n        'register',\r\n        'restrict',\r\n        'return',\r\n        'RWBuffer',\r\n        'RWStructuredBuffer',\r\n        // 'sampler',\r\n        // 'sampler1D',\r\n        // 'sampler2D',\r\n        // 'sampler3D',\r\n        'SamplerState',\r\n        'SamplerComparisonState',\r\n        'DepthStencilState',\r\n        'BlendState',\r\n        'RasterizerState',\r\n        'static',\r\n        'string',\r\n        'struct',\r\n        'switch',\r\n        'technique',\r\n        'true',\r\n        'texture',\r\n        'texture1D',\r\n        'texture2D',\r\n        'texture3D',\r\n        'textureCube',\r\n        'typedef',\r\n        'union',\r\n        'unsigned',\r\n        'uint',\r\n        'uint2',\r\n        'uint3',\r\n        'uint4',\r\n        'uint64',\r\n        'uniform',\r\n        'vector',\r\n        'void',\r\n        'while',\r\n\r\n        'asm',\r\n\r\n\r\n        // partFX\r\n        'partFx',\r\n        'spawn',\r\n        'draw',\r\n        'preset'\r\n    ],\r\n\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\r\n    floatsuffix: /[fFlL]?/,\r\n    encoding: /u|u8|U|L/,\r\n\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // C++ 11 Raw String\r\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\r\n\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                cases: {\r\n                    '@keywords': { token: 'keyword.$0' },\r\n                    '@default': 'identifier'\r\n                }\r\n            }],\r\n\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n\r\n            // [[ attributes ]].\r\n            [/\\[\\[.*\\]\\]/, 'annotation'],\r\n\r\n            [/\\s*#include/, { token: 'keyword.directive.include', next: '@include' }],\r\n\r\n            // Preprocessor directive\r\n            [/\\s*#\\s*\\w+/, 'keyword'],\r\n\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                cases: {\r\n                    '@operators': 'delimiter',\r\n                    '@default': ''\r\n                }\r\n            }],\r\n\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\r\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\r\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\r\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\r\n            [/\\d(@integersuffix)/, 'number'],\r\n\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],  // non-teminated string\r\n            [/\"/, 'string', '@string'],\r\n\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ],\r\n\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        doccomment: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n\r\n        raw: [\r\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\r\n                cases: {\r\n                    '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\r\n                    '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\r\n                }\r\n            }\r\n            ],\r\n            [/.*/, 'string.raw']\r\n        ],\r\n\r\n        include: [\r\n            [/(\\s*)(<)([^<>]*)(>)/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]],\r\n            [/(\\s*)(\")([^\"]*)(\")/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]]\r\n        ]\r\n    }\r\n};\r\n"],"names":[],"sourceRoot":""}